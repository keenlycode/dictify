{"version":3,"sources":["bits/bits.rt.html","checkbox/checkbox.rt.html","file/file.rt.html","icon/icon.rt.html","input/input.rt.html","markdown/markdown.rt.html","menu-accordion/menu-accordion.rt.html","progress/dot-pulse.rt.html","progress/progress-bar.rt.html","progress/spinner.rt.html","radio/radio.rt.html","sidebar/sidebar.rt.html","slide/slide.rt.html","switch/switch.rt.html"],"names":[],"mappings":"AAAA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bits-ui.js","sourcesContent":["<bits>\n    <yield/>\n</bits>\n","<checkbox>\n    <yield/>\n    <span></span>\n</checkbox>\n","<file>\n    <yield/>\n    <script>\n    var self = this;\n    self.on('mount', function(){\n        self.root.querySelector('[data-id=\"button\"]').addEventListener('click',\n            function(){\n                self.root.querySelector('input[type=\"file\"]').click();\n            }\n        )\n    });\n    </script>\n</file>\n","<icon>\n    <svg ref=\"svg\" class=\"{opts.theme} {opts.name}\"></svg>\n    <script>\n    var self = this;\n    var meta = document.querySelector(\n        'link[rel=\"icon-svg\"][theme=\"' + self.opts.theme + '\"]'\n    );\n    try {\n        self.href = meta.getAttribute('href');\n    } catch (err) {\n        console.log('Bits icon can\\'t find <link rel=\"icon-svg\">')\n    };\n    self.on('mount', function(){\n        var use = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'use');\n        use.setAttributeNS(\n            'http://www.w3.org/1999/xlink',\n            'xlink:href',\n            self.href + '#' + self.opts.name);\n        self.refs['svg'].appendChild(use);\n    })\n    </script>\n</icon>\n","<input-number>\n    <yield/>\n    <button-group>\n        <button-square onclick={up}>+</button-square>\n        <button-square onclick={down}>-</button-square>\n    </button-group>\n    <script>\n    var self = this;\n    self.option = {\n        \"step\": 1,\n        \"max\": null,\n        \"min\": null,\n        \"value\": 0\n    }\n\n    self.on('mount', function(opts){\n        self.input = self.root.querySelector('input');\n        option = self.input.getAttribute('step');\n        if (option) {self.option.step = Number(option)};\n        option = self.input.getAttribute('min');\n        if (option) {self.option.min = Number(option)};\n        option = self.input.getAttribute('max');\n        if (option) {self.option.max = Number(option)};\n        option = self.input.getAttribute('value');\n        if (option) {self.option.value = Number(option)};\n    });\n\n    up (event) {\n        var value = Number(self.input.value) + self.option.step;\n        if (self.option.max !== null && value > self.option.max) {\n            return;\n        }\n        self.input.value = value;\n    }\n\n    down (event) {\n        var value = Number(self.input.value) - self.option.step;\n        if (self.option.min !== null && value < self.option.min) {\n            return;\n        }\n        self.input.value = value;\n    }\n    </script>\n</input-number>\n","<markdown>\n    <script>\n    var self = this;\n\n    self.on('mount', function(){\n        fetch(self.root.getAttribute('src')).then(function(response){\n            return response.text();\n        }).then(function(markdown){\n            self.root.innerHTML = marked(markdown);\n            if (Prism) {\n                Prism.highlightAllUnder(self.root);\n            };\n        });\n    })\n\n    </script>\n</markdown>\n","<menu-accordion>\n    <yield/>\n    <script>\n    var self = this;\n\n    self.on('mount', function(){\n        var caret = document.createElement('i');\n        self.a_items = self.root.querySelectorAll('a');\n        caret.classList.add('caret');\n        for (item of self.a_items) {\n            item.addEventListener('click', self.click);\n            if (item.parentElement.querySelector('ul')) {\n                item.appendChild(caret.cloneNode(true));\n            };\n        };\n    })\n\n    _hide (li) {\n        for (a of li.querySelectorAll('a')){\n            a.classList.remove('on');\n            ul = a.parentElement.querySelector('ul');\n            if (!ul) { continue };\n            ul.style.height = ul.scrollHeight;\n            // setTimeout to create height transition.\n            setTimeout(function(ul){\n                ul.style.height = 0;\n            }, 0, ul);\n        }\n    }\n\n    _show (li) {\n        var a = li.querySelector('a');\n        a.classList.add('on');\n        ul = a.closest('ul');\n        ul.style.height = 'auto';\n        ul = li.querySelector('ul');\n        if (!ul) { return };\n        ul.style.height = ul.scrollHeight;\n    }\n\n    click (event) {\n        var a = event.currentTarget;\n        if (a.classList.contains('on')) {\n            self._hide(a.parentElement);\n        } else {\n            self._show(a.parentElement);\n        }\n    }\n    </script>\n</menu-accordion>\n","<dot-pulse>\n  <div data-id=\"p1\"></div>\n  <div data-id=\"p2\"></div>\n  <div data-id=\"p3\"></div>\n</dot-pulse>\n","<progress-bar>\n  <div class=\"indeterminate\"></div>\n</progress-bar>\n\n<!-- <div class=\"progress\">\n  <div class=\"indeterminate\"></div>\n</div> -->\n","<spinner>\n    <svg viewBox=\"25 25 50 50\">\n      <circle cx=\"50\" cy=\"50\" r=\"20\" stroke-miterlimit=\"10\"/>\n    </svg>\n</spinner>\n","<radio>\n    <yield/>\n    <span></span>\n</radio>\n","<sidebar>\n    <yield/>\n    <script>\n    var self = this;\n\n    self.on('mount', function(){\n        // self.opts.show = (typeof self.opts.show !== 'undefined') ? self.opts.show : '1000px';\n        if (typeof self.opts.show === 'undefined') {\n            return;\n        }\n        media_query = '(min-width: ' + self.opts.show + ')';\n        self.media_query = window.matchMedia(media_query);\n        if (self.media_query.matches) {\n            setTimeout(function(){\n                self.show_sidebar();\n            }, 0)\n        };\n        self.media_query.addListener(self.media_change);\n    })\n\n    media_change () {\n        if (self.media_query.matches) {\n            self.show_sidebar();\n        } else {\n            self.hide_sidebar();\n        }\n    }\n\n    show_sidebar () {\n        self.refs.wrapper.classList.add('show');\n        self.refs.overlay.classList.add('show');\n    };\n    hide_sidebar () {\n        self.refs.wrapper.classList.remove('show');\n        self.refs.overlay.classList.remove('show');\n    };\n    </script>\n</sidebar>\n","<slide>\n    <div ref=\"slide\">\n        <yield/>\n    </div>\n    <div ref=\"nav\"></div>\n    <script>\n    var self = this;\n\n    self.on('mount', function(opts) {\n        self.refs.slide.addEventListener('touchstart', self.clear_interval, false);\n        self.refs.slide.addEventListener('click', self.clear_interval, false);\n        self.refs.slide.ondragstart = self.clear_interval;\n        self.slides = self.refs.slide.querySelectorAll('.slide')\n        var siema = {\n            \"selector\": self.refs.slide,\n            \"loop\": true,\n            \"onChange\": self.on_change,\n            \"duration\": 300\n        };\n        for (var key in opts) siema[key] = opts[key];\n        self.siema = new Siema(siema);\n        for (i=0; i<self.slides.length; i++) {\n            var dot = document.createElement('dot');\n            dot.dataset.i = i;\n            self.refs.nav.appendChild(dot);\n            dot.onclick = function(event){\n                self.nav_click(event);\n            };\n        };\n        self.dots = self.refs.nav.querySelectorAll('dot');\n        self.dots[0].classList.add('selected');\n        self.set_interval();\n    });\n\n    nav_click (event) {\n        var self = this;\n        var dot = event.currentTarget;\n        self.refs.nav.querySelector('.selected').classList.remove('selected');\n        dot.classList.add('selected');\n        self.siema.goTo(dot.dataset.i);\n        self.clear_interval();\n    };\n\n    on_change (event) {\n        var i = self.siema.currentSlide;\n        self.refs.nav.querySelector('.selected').classList.remove('selected');\n        self.dots[i].classList.add('selected');\n        self.trigger('change');\n    };\n\n    set_interval () {\n        self.interval = setInterval(function(){\n            self.siema.next();\n        }, 4000)\n    }\n\n    clear_interval () {\n        clearInterval(self.interval);\n    };\n    </script>\n</slide>\n","<switch>\n    <yield/>\n    <div ref=\"row\">\n        <span ref=\"on\">{opts.on}</span>\n        <span ref=\"off\">{opts.off}</span>\n    </div>\n    <div ref=\"paddle\"></div>\n    <script>\n    var self = this;\n\n    self.on('mount', function(opts){\n        opts = (typeof opts !== 'undefined') ?  opts : {};\n        opts.on = (typeof opts.on !== 'undefined') ?  opts.on : \"ON\";\n        opts.off = (typeof opts.off !== 'undefined') ?  opts.off : \"OFF\";\n        self.opts = opts;\n        self.update();\n    });\n    </script>\n</switch>\n"]}